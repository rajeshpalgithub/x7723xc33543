<?php defined('BASEPATH') OR exit('No direct script access allowed');


class User_model extends CI_Model
{
	
	private $page_default =0;
	private $records_default =20;
	private $client_id;
	function __construct() {
		$this->load->model('Tables_model');
		$this->load->model('Login_model');
		$this->client_id = $this->Basic_model->unique_id;
	}
	
	function getUsers($parameters)
	{
		$user_list = array();
		$users = array(
			'role_id'=>'role_id',
			'role_name'=>'role_name',
			'role_users_id'=>'user_id',
			'role_parent_id'=>'parent_role_id',
			'role_users_name'=>'name',
			'role_users_is_default'=>'is_default',
		
		);
		
		
		 $page = $parameters['page']-1;
		 $records= $parameters['records'];
		 $search_text = $parameters['search_text'];
		 
		 if($page=='' || $page <= 0 )
		 {
			 	$page = $this->page_default;
		 }
		 if($records=='' || $records > 20)
		 {
			 $records=$this->records_default;
		 }
		 
		 $table_roles = $this->Tables_model->roles;
		 $table_role_users = $this->Tables_model->role_users;
		 
		 $column_roles_client_id = $this->Tables_model->roles('roles_client_id');
		 
		 $column_roles_id = $this->Tables_model->roles('roles_id');
		 $column_roles_client_id= $this->Tables_model->roles('roles_client_id');
		 $column_roles_parent_id= $this->Tables_model->roles('roles_parent_id');
		 $column_roles_name= $this->Tables_model->roles('roles_name');
		 $column_roles_created_by= $this->Tables_model->roles('roles_created_by');
		 $column_roles_created_date= $this->Tables_model->roles('roles_created_date');
		 $column_roles_is_active= $this->Tables_model->roles('roles_roles_is_active');
		 
		 $column_role_users_id= $this->Tables_model->role_users('role_users_id');
		 $column_role_users_roles_id= $this->Tables_model->role_users('role_users_roles_id');
		 $column_role_users_name= $this->Tables_model->role_users('role_users_name');
		 $column_role_users_report_to= $this->Tables_model->role_users('role_users_report_to');
		 $column_role_users_address= $this->Tables_model->role_users('role_users_address');
		 $column_role_users_city= $this->Tables_model->role_users('role_users_city');
		 $column_role_user_state= $this->Tables_model->role_users('role_user_state');
		 $column_role_users_country= $this->Tables_model->role_users('role_users_country');
		 $column_role_users_postal_code= $this->Tables_model->role_users('role_users_postal_code');
		 $column_role_users_is_default= $this->Tables_model->role_users('role_users_is_default');
		 $column_role_users_is_active= $this->Tables_model->role_users('role_users_is_active');
		 $column_role_users_created_date= $this->Tables_model->role_users('role_users_created_date');
		 
		 
		$client_id= $this->client_id;
		 
		 if($search_text!='')
		 {
		 	
			
		 	$sql="SELECT  $table_roles.$column_roles_id as role_id, 
			 				$table_roles.$column_roles_name as role_name, 
							$table_role_users.$column_role_users_id as role_users_id,
			 				$table_role_users.$column_role_users_name as role_user_name,
							$table_role_users.$column_role_users_is_default as role_users_is_default
			  FROM $table_roles
	 		
			INNER JOIN 
			$table_role_users
			ON $table_roles.$column_roles_id=$table_role_users.$column_role_users_roles_id
			WHERE
			$table_roles.$column_roles_client_id=$client_id
			AND
			$table_role_users.$column_role_users_name LIKE '%$search_text%'
			OR
			$table_roles.$column_roles_name LIKE '%$search_text%' 
			ORDER BY
			$table_role_users.$column_role_users_created_date";
							
		 }else{
			
			 $sql="SELECT  $table_roles.$column_roles_id as role_id, 
			 				$table_roles.$column_roles_name as role_name, 
							$table_role_users.$column_role_users_id as role_users_id,
			 				$table_role_users.$column_role_users_name as role_user_name,
							$table_role_users.$column_role_users_is_default as role_users_is_default
			  FROM $table_roles
	 		
			INNER JOIN 
			$table_role_users
			ON $table_roles.$column_roles_id=$table_role_users.$column_role_users_roles_id
			WHERE
			$table_roles.$column_roles_client_id=$client_id
			ORDER BY
			$table_role_users.$column_role_users_created_date DESC  LIMIT $page,$records";
			
		
		 				
			
		 }
		
		 
		 $rs=$this->db->query($sql);
		 
		 if($rs->num_rows()>0)
		 {
			  $users_arr=$rs->result_array();
			  foreach($users_arr as $item)
			  {
				  
				  $user_list[]=array(
					 $users['role_users_id']=>$item['role_users_id'],
					 $users['role_users_name']=>$item['role_user_name'],
					 $users['role_name']=>$item['role_name'],
					 $users['role_id']=>$item['role_id'],
					 $users['role_users_is_default']=>$item['role_users_is_default'],
					
				  );
			  }
		 }
		 
		 return $user_list;
		 
	}
	function getTotal_users($parameters)
	{
		$client_id = $this->client_id;
		
		$search_text = $parameters['search_text'];
		
		$table_roles = $this->Tables_model->roles;
		$table_role_users = $this->Tables_model->role_users;
		
		 $column_roles_client_id = $this->Tables_model->roles('roles_client_id');
		 
		 $column_roles_id = $this->Tables_model->roles('roles_id');
		 
		 $column_role_users_roles_id= $this->Tables_model->role_users('role_users_roles_id');
		 $column_role_users_name= $this->Tables_model->role_users('role_users_name');
		 $column_roles_name= $this->Tables_model->roles('roles_name');
		
		if( $search_text != '')
		{
			$sql="SELECT  count(*) as total_rows
			
			 FROM $table_roles
	 		
			INNER JOIN 
			$table_role_users
			ON $table_roles.$column_roles_id=$table_role_users.$column_role_users_roles_id
			WHERE
			$table_roles.$column_roles_client_id=$client_id
			AND
			$table_role_users.$column_role_users_name LIKE '%$search_text%'
			OR
			$table_roles.$column_roles_name LIKE '%$search_text%' ";
		
		 }else{
		 	$sql="SELECT  count(*) as total_rows
			  FROM $table_roles
	 		
			INNER JOIN 
			$table_role_users
			ON $table_roles.$column_roles_id=$table_role_users.$column_role_users_roles_id
			WHERE
			$table_roles.$column_roles_client_id=$client_id";
		}
		
		 $rs=$this->db->query($sql);
		 $ret = $rs->row();
		return $ret->total_rows;
	}
	
	
}

?>